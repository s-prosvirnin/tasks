package leet_code

import "math"

// Используем стэк для сравнения пары

func asteroidCollision(asteroids []int) []int {
	// стэк для не столкнувшихся элементов (результирующий массив)
	res := []int{asteroids[0]}
	// указатель на правый элемент (сравниваем пару левый-правый из массива)
	rightP := 1
	// пока есть элементы
	for rightP < len(asteroids) {
		// правый элемент (сравниваем пару левый-правый из массива)
		right := asteroids[rightP]
		// При обработке можем удалить все элементы из стэка,
		// поэтому нужно добавить новый элемент (левый) из исходного массива.
		if len(res) == 0 {
			res = append(res, right)
			rightP++
			continue
		}
		// Левый элемент (сравниваем пару левый-правый из массива).
		left := res[len(res)-1]

		// либо оба элемента улетели в одну сторону
		// либо левый улетел влево, потом правый улетел вправо
		// т.е. нет столкновения - левый оставляем, добавляем правый
		if left > 0 && right > 0 || left < 0 && right < 0 || left < 0 && right > 0 {
			res = append(res, right)
			rightP++
			continue
		}

		// сюда пришли когда левый улетел вправо, правый улетел влево

		// правый элемент больше левого - убираем левый элемент
		if math.Abs(float64(left)) < math.Abs(float64(right)) {
			res = res[:len(res)-1]
			continue
		}

		// Оба элемента одинакового размера - убираем левый, пропускаем правый.
		// Т.е. отбрасываем оба элемента.
		if math.Abs(float64(left)) == math.Abs(float64(right)) {
			rightP++
			res = res[:len(res)-1]
			continue
		}

		// Правый элемент меньше левого - пропускаем правый элемент.
		rightP++
	}

	return res
}
